<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Version>6.0.4</Version>
    <PackageId>DataJuggler.Cryptography</PackageId>
    <Authors>DataJuggler</Authors>
    <Description>This is a port of the Dot Net Core version of CryptographyHelper from my Dot Net 
Framework project DataJuggler.Core.UltimateHelper.

The code is available here: https://github.com/DataJuggler/DataJuggler.Cryptography

This project adds many Nuget dependencies to use Konscious.Security.Cryptography in a Dot Net
Core project, so I choose to create a separate project rather than include it in the Dot Net Core version of UltimateHelper, DataJuggler.Net.UltimateHelper.Core.


To view the documentation, visit:
https://github.com/DataJuggler/DataJuggler.Cryptography/blob/master/README.md</Description>
    <PackageLicenseFile>License.txt</PackageLicenseFile>
    <PackageIcon>Lock32.png</PackageIcon>
    <PackageIconUrl />
    <RepositoryUrl>https://github.com/DataJuggler/DataJuggler.Cryptography.git</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>C# csharp Cryptography</PackageTags>
    <Copyright>DataJuggler 2022 - Use As Is - Do What You Want</Copyright>
    <PackageProjectUrl>https://github.com/DataJuggler/DataJuggler.Cryptography</PackageProjectUrl>
    <PackageReleaseNotes>
		6.8.2022 v6.0.4: Updated DataJuggler.UltimateHelper and Argon Nuget package.

		1.23.2022: DataJuggler.UltimateHelper was updated, so I updated this project.

		11.17.2021 (Take Three)
		x64 is kind of useless if you can only use it in x64 projects, so I had to switch back to any cpu.

		11.17.2021 (Take Two)
		Verion 6.0.1: Changing the package name doesn't change the namespace, so I had to do a global search and replace.
		The namespace is now correct at DataJuggler.Cryptography.

		11.17.2021
		Version 6.0.0: I updated to version 6.0.0, and I dropped the name. I am going to try and multi-target
		.Net 5 and 6 with this version. We will see the results soon.

		Version 1.5.0 - I ported this to .Net 5. Not sure if there are any advantages for doing that or not.

		Version 1.0.11 - I added a new optional parameter for VerifyHash that allows you to state that the userTypedPassword is actually a PasswordHash itself. This use case is designed for use with ProtectedLocalStorage to allow you to store the password hash on the client browser.
		This validation compares two encrypted passowrd hash strings that they are equal. As a test of security, it is verified that the encryptedPasswordHash stored can be used to create the salt. If the string decrypts with the keycode given and the salt is valid 16 bytes and the strings match exactly then this is considered verified also.

		Version 1.0.10 - I started testing today for the first time using the Nuget package and I couldn't get the class to show up. Trying again with the code set to Debug mode as it worked before I switched to Release.

		Version 1.0.9 - I am trying recreating the salt every time. Some password fail up to max retires
		count, and perhaps the salt is the problem. I noticed NotASecret default password is where this
		problem occurs. I might change it to something else if this still fails.

		Version 1.0.8 - I added a verifyRetries parameter to GeneratePasswordHash method. If set to true,
		the method will try and verify if it cannot be verified a new hash will be created and tried again up
		to the verirfyRetries count.

		Version 1.0.7 - I added try catches to all the methods.

		The first release had the wrong namespace.</PackageReleaseNotes>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Nullable>disable</Nullable>    
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net6.0|AnyCPU'">
    <WarningLevel>5</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net6.0|AnyCPU'">
    <WarningLevel>5</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Sample\Blazor.CryptographySample\**" />
    <EmbeddedResource Remove="Sample\Blazor.CryptographySample\**" />
    <None Remove="Sample\Blazor.CryptographySample\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="License\License.txt" />
    <None Include="Images\Lock32.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="License\License.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="License\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="DataJuggler.UltimateHelper" Version="6.0.4" />
    <PackageReference Include="Konscious.Security.Cryptography.Argon2" Version="1.3.0" />
  </ItemGroup>

</Project>






